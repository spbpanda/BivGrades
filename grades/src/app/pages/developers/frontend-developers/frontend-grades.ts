import { Grade } from '../../../models/grade.models';

export const FRONTEND_GRADES: Grade[] = [
  {
    name: 'Intern',
    description:
      'Начальная ступень в карьере frontend-разработчика. На этом уровне сотрудник только знакомится с основами веб-разработки, учится работать в команде и выполняет простые задачи под руководством ментора. Зачастую, после 2-х месяцев работы получают позицию Junior J1.',
    education: {
      formal: 'Неоконченное высшее или среднее специальное',
      self: 'Начинает изучать HTML, CSS, JavaScript/TypeScript',
    },
    experience: {
      total: 'Нет опыта',
      project: 'Решение учебных задач',
      difficulty: 'Простые задачи',
      teamSize: 'Индивидуальная работа',
    },
    characteristics: [
      'Минимальный коммерческий опыт (либо его отсутствие).',
      'Требуется постоянная поддержка и код-ревью.',
      'Понимание основных принципов веб-разработки (либо желание их изучить).',
      'Акцент на обучение, а не на самостоятельную работу.',
    ],
    hardSkills: new Map([
      ['Язык программирования', ['Базовое знание JavaScript/TypeScript']],
      ['Инструменты разработки', ['Git']],
    ]),
    softSkills: new Map([
      ['Проактивность', ['Выполняет задачи под руководством']],
      ['Самоорганизация', ['Начинает учиться самоорганизации']],
      ['Обучаемость', ['Учится работать с новыми задачами']],
    ]),
    projectSkills: new Map([
      [
        'Управление задачами',
        [
          'Получает задачи от старших коллег. Выполняет задачи под руководством наставника.',
        ],
      ],
      [
        'Управление зависимостями',
        ['Работает с простыми задачами, где зависимости минимальны'],
      ],
      [
        'Работа с требованиями',
        [
          'Выполняет задачи по четко описанным требованиям',
          'Задает вопросы наставнику при неясностях',
        ],
      ],
    ]),
    howToRate: [
      'Hard Skills – проверка через тестовое задание (верстка макета + простой JS), задачи по проекту.',
      'Soft Skills – наблюдение за скоростью усвоения информации, реакцией на правки в код-ревью.',
      'Project Skills – анализ качества выполнения первых задач, умения работать с Git (не ломает ветки)',
    ],
    imageUrl: '/assets/intern.png',
  },
  {
    name: 'Junior J1',
    description:
      'Первый полноценный уровень в карьере фронтенд-разработчика. Специалист уже может самостоятельно выполнять простые задачи, но ещё требует регулярного контроля и менторской поддержки. Основная цель — закрепление базовых навыков и постепенный переход к самостоятельной работе.',
    education: {
      formal: 'Неоконченное высшее или среднее специальное',
      self: 'Начинает изучать HTML, CSS, JavaScript/TypeScript',
    },
    experience: {
      total: 'Нет опыта',
      project: 'Решение учебных задач',
      difficulty: 'Простые задачи',
      teamSize: 'Индивидуальная работа',
    },
    characteristics: [
      'Может работать без постоянного надзора, но нуждается в код-ревью.',
      'Выполняет задачи по готовым ТЗ.',
      'Начинает понимать процессы разработки в команде.',
      'Допускает ошибки, но способен их исправлять с подсказками.',
    ],
    hardSkills: new Map([
      ['Принципы разработки ПО', ['Базовое понимание SOLID']],
      [
        'Паттерны проектирования',
        ['Знакомство с базовыми паттернами (Singleton, Factory)'],
      ],
      ['Язык программирования', ['Базовое знание JavaScript/TypeScript']],
      ['Фреймворки', ['Базовое знакомство с Angular/React']],
      ['Инструменты разработки', ['Базовые IDE (IntelliJ IDEA), VSCode, VisualStudio, Git, DevTools, Postman']],
    ]),
    softSkills: new Map([
      ['Методологии разработки', ['Базовое понимание Scrum']],
      [
        'Понимание всех этапов цикла разработки',
        ['Базовое понимание этапов разработки'],
      ],
      ['Проактивность', ['Выполняет задачи под руководством']],
      ['Самоорганизация', ['Начинает учиться самоорганизации']],
      ['Обучаемость', ['Учится работать с новыми задачами']],
    ]),
    projectSkills: new Map([
      [
        'Управление задачами',
        [
          'Получает задачи от старших коллег',
          'Выполняет задачи под руководством наставника',
          'Участвует в обсуждениях только по своим задачам',
        ],
      ],
      [
        'Управление зависимостями',
        ['Работает с простыми задачами, где зависимости минимальны'],
      ],
      [
        'Работа с требованиями',
        [
          'Выполняет задачи по четко описанным требованиям',
          'Задает вопросы наставнику при неясностях',
        ],
      ],
    ]),
    howToRate: [
      'Hard Skills – проверка через тестовое задание (верстка макета), задачи по проекту, техническое собеседование (вопросы по JS, фреймворкам)',
      'Soft Skills – наблюдение за качеством коммуникации в команде, реакцией на правки в код-ревью, способностью самостоятельно решать проблемы',
      'Project Skills – анализ качества выполнения задач, участия в командных процессах.',
    ],
    imageUrl: '/assets/junior1.png',
    questions: new Map([
      [
        'JavaScript / TypeScript',
        [
          'Понимает и может объяснить основные типы в JavaScript: string, number, boolean, null, undefined, symbol, bigint, object',
          'Знает разницу между interface и class: interface описывает структуру объекта, используется на этапе компиляции; class — конструкция для создания экземпляров, содержит реализацию методов',
          'Может решать простые задачи по JS/TS и верстке: создание форм, валидация, стилизация, адаптивность',
        ],
      ],
      [
        'Инструменты',
        [
          'Знает как создать новую ветку в Git: git checkout -b <branch-name>',
          'Понимает, что git merge объединяет изменения одной ветки в текущую',
        ],
      ],
      [
        'Работа в команде',
        [
          'Умеет просить помощь, если задача непонятна — формулирует конкретные вопросы, уточняет постановку, предоставляет контекст',
          'Конструктивно реагирует на критику кода — уточняет замечания, применяет рекомендации, воспринимает обратную связь спокойно',
        ],
      ],
      [
        'Обучаемость',
        [
          'Использует ресурсы для изучения JS/TS: MDN, TypeScript Handbook, документация, видеоуроки, курсы (например, freeCodeCamp, JavaScript Info)',
          'Закрепляет знания на практике — применяет в пет-проектах, пишет утилиты, участвует в командных задачах, проводит эксперименты с кодом',
        ],
      ],
      [
        'Project Skills',
        [
          'Умеет разбивать задачу «Реализовать форму для ИП» на подзадачи: проектирование структуры формы, разметка, валидация, подключение API, тестирование, стилизация',
          'Если оценка задачи оказалась нереалистичной — пересматривает план, сообщает команде/лиду, предлагает компромиссное решение или обоснованное изменение сроков',
        ],
      ],
    ]),
    recommendations: new Map([
      [
        'Хард-скиллы',
        [
          'Базовые знания HTML, CSS и JavaScript',
          'Начальное понимание принципов адаптивной верстки',
          'Знакомство с одним из фреймворков (React/Angular) на уровне простых компонентов',
          'Умение работать с Git на уровне commit/push/pull',
          'Базовые навыки работы с консолью и npm/yarn',
          'Понимание основ REST API',
          'Умение пользоваться DevTools для отладки',
        ],
      ],
      [
        'Софт-скиллы',
        [
          'Высокая мотивация к обучению',
          'Готовность работать под руководством наставника',
          'Внимательность к деталям',
          'Умение задавать вопросы',
          'Исполнительность',
          'Готовность к рутинным задачам (верстка, правки)',
        ],
      ],
      [
        'Уровень участия в проекте',
        [
          'Выполняет простые задачи (верстка, мелкие правки) под контролем',
          'Участвует в код-ревью как наблюдатель',
          'Помогает в тестировании и отладке простых компонентов',
          'Изучает код проекта и документацию',
          'Работает по готовым макетам (Figma, Adobe XD)',
        ],
      ],
      [
        'Ключевые навыки для развития',
        [
          'Углубленное изучение JavaScript (ES6+)',
          'Освоение выбранного фреймворка (React/Angular)',
          'Изучение CSS-препроцессоров (SASS/SCSS)',
          'Развитие навыков работы с Git (ветки, merge, конфликты)',
          'Основы работы с API (fetch, axios, httpClient)',
        ],
      ],
      [
        'Рекомендуемые действия для перехода на следующий уровень',
        [
          'Пройти углубленные курсы по JavaScript и фреймворкам',
          'Выполнять пет-проекты для портфолио',
          'Активно участвовать в код-ревью, перенимая лучшие практики',
          'Изучать документацию и гайдлайны проекта',
          'Практиковаться в решении задач на Codewars/LeetCode',
        ],
      ],
      [
        'Качественный скачок',
        [
          'Переход от выполнения мелких задач под контролем к самостоятельной реализации небольших функциональных компонентов.',
        ],
      ],
    ]),
  },
  {
    name: 'Junior J2',
    description:
      'Уверенный начинающий разработчик, способный самостоятельно решать типовые задачи. Может работать с минимальным контролем, понимает процессы разработки и начинает вносить вклад в архитектурные решения. Основная цель — переход к решению более сложных задач и подготовка к уровню Junior +.',
    education: {
      formal: 'Оконченное высшее (техническое или IT)',
      self: 'Изучает JavaScript/TypeScript, Angular/React',
    },
    experience: {
      total: 'До 1 года',
      project: 'Участие в небольших проектах',
      difficulty: 'Средней сложности задачи',
      teamSize: 'Малые команды (2–3 человека)',
    },
    characteristics: [
      'Самостоятельно выполняет большинство типовых задач.',
      'Понимает бизнес-логику своих задач.',
      'Может помогать стажёрам и Junior-.',
      'Допускает ошибки, но способен их исправлять с подсказками.',
    ],
    hardSkills: new Map([
      ['Принципы разработки ПО', ['Понимание SOLID, DRY, KISS']],
      ['Паттерны проектирования', ['Использование популярных паттернов']],
      ['Язык программирования', ['Хорошее знание JavaScript/TypeScript']],
      ['Фреймворки', ['Начало работы с Angular/React']],
      ['Инструменты разработки', ['IntelliJ IDEA, VSCode, VisualStudio, Git, базовые CI/CD, DevTools, Postman']],
    ]),
    softSkills: new Map([
      ['Методологии разработки', ['Следование Scrum-процессам']],
      [
        'Понимание всех этапов цикла разработки',
        ['Понимание этапов разработки'],
      ],
      ['Проактивность', ['Выполняет задачи самостоятельно']],
      ['Самоорганизация', ['Умеет планировать задачи']],
      ['Обучаемость', ['Быстро осваивает новые технологии']],
      [
        'Менторство',
        [
          'Помогает разобраться в бизнес окружении проекта, передача знаний по архитектуре проекта, помощь с новыми задачами, ревью кода под контролем.',
        ],
      ],
    ]),
    projectSkills: new Map([
      [
        'Управление задачами',
        [
          'Умеет самостоятельно выполнять задачи средней сложности',
          'Оценивает трудозатраты под руководством старших коллег',
        ],
      ],
      [
        'Управление зависимостями',
        ['Работает с задачами, где есть простые зависимости',],
      ],
      [
        'Работа с требованиями',
        ['Анализирует простые требования и формулирует вопросы'],
      ],
    ]),
    howToRate: [
      'Hard Skills – проверка через реализацию SPA с API-интеграцией, техническое собеседование с вопросами по (фреймворкам, инструментам), разбор чужого кода.',
      'Soft Skills – наблюдение за участием в планировании, качеством коммуникации, скоростью решения проблем.',
      'Project Skills – анализ качества сложности выполненных задач, качества кода, вклада в развитие проекта.',
    ],
    imageUrl: '/assets/junior2.png',
    questions: new Map([
      [
        'JavaScript / TypeScript / Angular / React',
        [
          'Знает жизненный цикл компонента в Angular (ngOnInit, ngOnDestroy, ngAfterViewInit и т.п.) и может объяснить их назначение',
          'Знает часто используемые хуки в React: useState, useEffect, useContext, useRef и т.п.',
          'Понимает, как работает EventLoop — очереди, стек вызовов, макро- и микротаски',
          'Может решать простые задачи на Angular/React: компоненты, формы, взаимодействие с API, верстка',
        ],
      ],
      [
        'Инструменты',
        [
          'Умеет работать с Postman: отправка GET, POST, PUT, DELETE-запросов, просмотр и анализ ответа',
        ],
      ],
      [
        'Работа в команде',
        [
          'Умеет просить помощь, если задача непонятна — формулирует конкретные вопросы, уточняет постановку, предоставляет контекст',
          'Конструктивно реагирует на критику кода — уточняет замечания, применяет рекомендации, воспринимает обратную связь спокойно',
        ],
      ],
      [
        'Обучаемость',
        [
          'Использует ресурсы для изучения Angular/React: официальная документация, курсы на Udemy/YouTube, статьи на dev.to/Habr',
          'Закрепляет знания на практике — реализует пет-проекты, участвует в фичах командного проекта, делает собственные компоненты',
        ],
      ],
      [
        'Коммуникация',
        [
          'Умеет объяснять техническую проблему нетехническому коллеге — упрощает терминологию, приводит аналогии и примеры',
          'Активно участвует в ежедневных дейли — кратко рассказывает о проделанной работе, блокерах и планах',
        ],
      ],
      [
        'Проактивность',
        [
          'Предлагал улучшения в проекте — например, замену устаревшего подхода, оптимизацию запросов, улучшение UX',
        ],
      ],
      [
        'Project Skills',
        [
          'Если задачу необходимо делать несколькими командами — инициирует встречу/синк, договаривается о зонах ответственности, оформляет соглашения по интеграции',
        ],
      ],
      [
        'Работа с требованиями',
        [
          'Если в требованиях нет деталей — уточняет у аналитика/менеджера, формулирует недостающие кейсы, предлагает варианты',
          'Проверяет выполнение задачи по ТЗ — проходит все пункты описания, сверяет логику и UI, просит подтверждение от постановщика задачи',
        ],
      ],
      [
        'Релизы',
        [
          'Перед отправкой кода в тест — проверяет валидность кода, запускает локальные тесты, делает самопроверку по чеклисту, обновляет changelog/документацию',
        ],
      ],
    ]),
    recommendations: new Map([
      [
        'Хард-скиллы',
        [
          'Уверенное владение HTML5, CSS3 (Flexbox, Grid)',
          'Базовое понимание JavaScript (ES6+)',
          'Опыт работы с одним из фреймворков (React/Angular) на уровне компонентов',
          'Умение работать с REST API (fetch, axios, httpClient)',
          'Навыки работы с Git (ветки, merge, разрешение конфликтов)',
          'Базовое понимание инструментов сборки (Webpack/Vite)',
          'Знание CSS-препроцессоров (SASS/SCSS)',
        ],
      ],
      [
        'Софт-скиллы',
        [
          'Обучаемость и желание развиваться',
          'Коммуникативные навыки (умение задавать вопросы, обсуждать задачи)',
          'Внимательность к деталям (качество верстки, соответствие макетам)',
          'Умение работать в команде (взаимодействие с бэкендом, дизайнерами)',
          'Организованность (ведение задач в Jira, коммиты по стандартам)',
        ],
      ],
      [
        'Уровень участия в проекте',
        [
          'Самостоятельно реализует простые компоненты и страницы',
          'Участвует в код-ревью (получает и частично применяет правки)',
          'Работает с Figma/Adobe XD (верстка по готовым макетам)',
          'Пишет базовые unit-тесты (Jest/Vitest)',
          'Участвует в планировании задач (оценка сроков простых фич)',
        ],
      ],
      [
        'Ключевые навыки для развития',
        [
          'Углубленное изучение JavaScript (асинхронность, паттерны)',
          'Освоение продвинутых возможностей фреймворка (хуки, оптимизация)',
          'State-менеджмент (Redux/Ngxs/Ngrx)',
          'TypeScript (базовые типы, интерфейсы)',
          'Работа с SSR/SSG (Next.js, Nuxt.js)',
          'Оптимизация производительности (Lighthouse, бандл-анализ)',
        ],
      ],
      [
        'Рекомендуемые действия для перехода на следующий уровень',
        [
          'Практиковать сложные задачи: реализация форм с валидацией, работа с WebSockets/GraphQL, оптимизация загрузки (ленивая подгрузка, кэширование)',
          'Участвовать в Open Source или пет-проектах',
          'Изучать смежные области: базовый бэкенд (Node.js, Express), DevOps (Docker, CI/CD)',
          'Проводить код-ревью для Internов',
          'Посещать митапы/конференции по фронтенду',
        ],
      ],
      [
        'Качественный скачок',
        [
          'Переход от выполнения задач по шаблону к: самостоятельному проектированию компонентов, участию в принятии архитектурных решений, наставничеству для Internов.',
        ],
      ],
    ]),
  },
  {
    name: 'Junior J3',
    description:
      'Продвинутый junior-разработчик, демонстрирующий признаки готовности к переходу на middle-уровень. Способен решать сложные задачи, вносить архитектурные предложения и самостоятельно находить оптимальные решения. На этом уровне разработчик начинает мыслить не только в рамках конкретной задачи, но и в контексте всего проекта.',
    education: {
      formal: 'Оконченное высшее + базовые курсы по Angular/React',
      self: 'Углубленное изучение Angular/React, базовые знания с RxJs',
    },
    experience: {
      total: '1–2 года',
      project: 'Участие в коммерческих проектах',
      difficulty: 'Сложные задачи',
      teamSize: 'Средние команды (4–6 человек)',
    },
    characteristics: [
      'Самостоятельно решает нетривиальные задачи',
      'Активно участвует в проектировании решений',
      'Понимает и учитывает бизнес-контекст задач',
      'Начинает работать над качеством кода всей команды',
    ],
    hardSkills: new Map([
      ['Принципы разработки ПО', ['Применение SOLID, DRY, KISS в работе']],
      ['Паттерны проектирования', ['Применение паттернов в сложных задачах']],
      ['Язык программирования', ['Продвинутое знание JavaScript/TypeScript']],
      ['Фреймворки', ['Продвинутое знание Angular/React']],
      ['Инструменты разработки', ['IntelliJ IDEA, VSCode, VisualStudio, продвинутый CI/CD, DevTools, Postman']],
    ]),
    softSkills: new Map([
      ['Методологии разработки', ['Активное участие в Scrum']],
      [
        'Понимание всех этапов цикла разработки',
        ['Применение этапов разработки в работе'],
      ],
      ['Проактивность', ['Предлагает улучшения']],
      ['Самоорганизация', ['Умеет эффективно планировать задачи']],
      ['Обучаемость', ['Легко адаптируется к изменениям']],
      [
        'Менторство',
        [
          'Консультации по этапам разработки, передача знаний по интеграциям, внешним и общим сервисам, ревью кода.',
        ],
      ],
    ]),
    projectSkills: new Map([
      [
        'Управление задачами',
        [
          'Умеет планировать выполнение нескольких задач одновременно.',
          'Участвует в оценке задач и предлагает свои идеи.',
        ],
      ],
      [
        'Управление зависимостями',
        [
          'Работает с задачами, где есть зависимости между несколькими компонентами.',
        ],
      ],
      [
        'Работа с требованиями',
        ['Предлагает улучшения к требованиям, основываясь на опыте.'],
      ],
    ]),
    howToRate: [
      'Hard Skills – проверка через реализацию SPA с API-интеграцией, оптимизация производительности, техническое собеседование с вопросами по (фреймворкам, инструментам), разбор чужого кода.',
      'Soft Skills – наблюдение за участием в принятии решений, качеством менторства, проактивностью.',
      'Project Skills – анализ вклада в архитектуру, качества проведённых код-ревью, участия в улучшении процессов.',
    ],
    imageUrl: '/assets/junior3.png',
    questions: new Map([
      [
        'JavaScript / TypeScript / Angular / React',
        [
          'Применяет принципы SOLID при разработке компонентов — делает их единоответственными, переиспользуемыми, легко заменяемыми',
          'Знает и использует основные принципы разработки Angular/React: реактивность, управление состоянием, разбиение на модули/компоненты, контроль за побочными эффектами',
          'Решает задачи средней сложности на Angular/React — формы, роутинг, взаимодействие с API, стилизация компонентов, адаптивная верстка',
        ],
      ],
      [
        'Инструменты',
        [
          'Умеет использовать DevTools браузера — вкладки Elements, Network, Sources, Performance',
          'Использует плагины для разработки: Redux DevTools, React Developer Tools, Angular DevTools и др.',
        ],
      ],
      [
        'Работа в команде',
        [
          'Умеет распределять нагрузку между несколькими командами — определяет границы ответственности, декомпозирует задачи, выстраивает интеграционные точки',
          'В случае конфликта интересов — инициирует обсуждение, предлагает компромиссы, привлекает тимлида/аналитика при необходимости',
        ],
      ],
      [
        'Обучаемость',
        [
          'Использует ресурсы для изучения Angular/React: официальная документация, StackBlitz, курсы на YouTube, Udemy, статьи на Medium/Habr',
          'Закрепляет знания через практику: вносит улучшения в текущие проекты, реализует пет-проекты, пишет технические заметки',
        ],
      ],
      [
        'Самоорганизация',
        [
          'Планирует задачи на неделю — использует таск-трекеры (Jira, Trello), таймбоксинг, списки дел, приоритизацию',
        ],
      ],
      [
        'Зависимости',
        [
          'Умеет управлять блокирующими задачами — фиксирует зависимости, напоминает ответственным, предлагает временные обходные решения',
          'Если API изменилось без предупреждения — оперативно фиксирует проблему, сообщает команде-контрагенту, адаптирует код с учетом изменений',
        ],
      ],
      [
        'Риски',
        [
          'Проверяет, что новая фича не ломает текущую логику — покрывает изменения тестами, проверяет смежные модули, проводит регрессионную проверку вручную или через CI',
        ],
      ],
      [
        'Менторство',
        [
          'Помогает новичку разобраться в кодовой базе — показывает структуру проекта, объясняет паттерны, делится документацией и примерами',
          'При код-ревью Junior-разработчика — обращает внимание на читаемость кода, дублирование, правильность типизации, архитектурные подходы и потенциальные баги',
        ],
      ],
    ]),
    recommendations: new Map([
      [
        'Хард-скиллы',
        [
          'Уверенное владение HTML/CSS (адаптивная и кроссбраузерная верстка, CSS-анимации)',
          'JavaScript (ES6+) (работа с асинхронностью, замыканиями, this)',
          'Опыт работы с фреймворком (React/Angular) на уровне создания сложных компонентов',
          'Работа с REST/GraphQL API (авторизация, обработка ошибок, кэширование)',
          'State-менеджмент (Redux/Ngxs/Ngrx) на базовом уровне',
          'Инструменты сборки (Webpack/Vite) — настройка конфигов под руководством',
          'Базовый TypeScript (типизация компонентов, интерфейсы)',
          'Unit-тестирование (Jest/Vitest + React Testing Library/Vue Test Utils)',
        ],
      ],
      [
        'Софт-скиллы',
        [
          'Самостоятельность в решении типовых задач',
          'Умение четко формулировать вопросы и прояснять требования',
          'Работа с документацией (ведение README, комментарии в коде)',
          'Навыки презентации (демонстрация своих решений команде)',
          'Понимание приоритетов (оценка сроков, выделение MVP)',
          'Проактивность (предложение улучшений кода/процессов)',
        ],
      ],
      [
        'Уровень участия в проекте',
        [
          'Самостоятельно реализует функциональные компоненты средней сложности',
          'Оптимизирует существующий код (рефакторинг, устранение багов)',
          'Участвует в планировании (оценка сроков своих задач)',
          'Проводит код-ревью для Internов',
          'Взаимодействует с бэкендом по API-контрактам',
          'Создает техническую документацию для своих компонентов',
        ],
      ],
      [
        'Ключевые навыки для развития',
        [
          'Продвинутый JavaScript/TypeScript (паттерны, сложные структуры данных)',
          'Архитектура фронтенд-приложений (паттерны проектирования)',
          'Оптимизация производительности (бандл-анализ, lazy loading)',
          'SSR/SSG (Next.js/Nuxt.js)',
          'Интеграционное тестирование (Cypress, Playwright)',
          'Работа с дизайн-системами (Storybook)',
        ],
      ],
      [
        'Рекомендуемые действия для перехода на следующий уровень',
        [
          'Вести собственный пет-проект с использованием: TypeScript, SSR (Next.js/Nuxt.js), тестирования (Jest + Cypress)',
          'Углубиться в выбранный фреймворк: React (хуки, контекст, производительность), Vue (Composition API, оптимизация рендеринга)',
          'Участвовать в Open Source (исправление багов, документация)',
          'Изучать смежные технологии: базовый бэкенд (Node.js + Express), DevOps (Docker, настройка CI/CD)',
          'Практиковать менторство (помощь Internам)',
        ],
      ],
      [
        'Качественный скачок',
        [
          'Переход от исполнителя к ответственным задачам: самостоятельное проектирование архитектуры компонентов, умение аргументировать технические решения, проактивное предложение оптимизаций (код, процессы), наставничество для Junior-разработчиков.',
        ],
      ],
    ]),
  },
  {
    name: 'Middle M1',
    description:
      'Переходная ступень от Junior+ к полноценному Middle. Разработчик на этом уровне уже способен самостоятельно решать сложные задачи, но ещё нуждается в консультациях по архитектурным решениям. Основная характеристика — баланс между технической экспертизой и растущей ответственностью за проект.',
    education: {
      formal: 'Оконченное высшее + курсы по Angular/React и микросервисам',
      self: 'Углубленное изучение Angular/React, RxJs, Ngxs/Ngrx',
    },
    experience: {
      total: '2–4 года',
      project: 'Участие в коммерческих проектах',
      difficulty: 'Очень сложные задачи',
      teamSize: 'Большие команды (7–10 человек)',
    },
    characteristics: [
      'Полная автономность в решении типовых задач',
      'Глубже понимание бизнес-контекста',
      'Ответственность за качество кода в своём модуле',
      'Способность оценивать риски технических решений',
    ],
    hardSkills: new Map([
      ['Принципы разработки ПО', ['Глубокое понимание принципов разработки']],
      ['Паттерны проектирования', ['Глубокое понимание паттернов']],
      ['Язык программирования', ['Экспертное знание JavaScript/TypeScript']],
      ['Фреймворки', ['Экспертное знание Angular/React']],
      [
        'Инструменты разработки',
        ['Экспертное знание CI/CD, начальные знания Docker'],
      ],
    ]),
    softSkills: new Map([
      ['Методологии разработки', ['Лидирование Scrum-процессов']],
      [
        'Понимание всех этапов цикла разработки',
        ['Глубокое понимание всех этапов'],
      ],
      ['Проактивность', ['Лидирует в части задач']],
      ['Самоорганизация', ['Умеет планировать задачи и влиять на результаты']],
      ['Обучаемость', ['Предлагает улучшения']],
      [
        'Менторство',
        [
          'Ревью кода, консультации по различным тех процессам. Помощь в решении сложных задач, корректировка разработки согласно регламентам компании.',
        ],
      ],
    ]),
    projectSkills: new Map([
      [
        'Управление задачами',
        [
          'Активно участвует в планировании и оценке задач.',
          'Самостоятельно распределяет свои задачи и устанавливает приоритеты.',
        ],
      ],
      ['Управление зависимостями', ['Координирует работу с другими командами']],
      [
        'Работа с требованиями',
        ['Формулирует технические требования на основе бизнес-задач.'],
      ],
    ]),
    howToRate: [
      'Hard Skills – проверка глубины понимания выбранного стека, качество архитектурных предложений.',
      'Soft Skills – наблюдение за участием в развитии команды, вклад в снижение технического долга, количество и значимость внедрённых улучшений.',
      'Project Skills – анализ коммуникации с продукт-менеджерами, качества проведённых код-ревью, участия в улучшении процессов.',
    ],
    imageUrl: '/assets/middle1.jpg',
    questions: new Map([
      [
        'JavaScript / TypeScript / Angular / React',
        [
          'Понимает, как работают менеджеры состояния (NgRx, Redux, MobX); знает их ключевые отличия: Redux – иммутабельность и предсказуемость, NgRx – вдохновлен Redux с использованием RxJS, MobX – реактивность и меньше шаблонного кода',
          'Знает, когда использовать async/await – в последовательных асинхронных операциях для улучшения читаемости кода; учитывает подводные камни: потеря stack trace, блокировка event loop при heavy await',
          'Понимает концепцию чистых функций – отсутствие побочных эффектов, одинаковый результат при одинаковом входе; знает, как они упрощают отладку и тестирование',
          'Оптимизирует рендеринг списков в Angular/React – использует trackBy / key, виртуализацию (например, с помощью CDK Virtual Scroll / react-window), мемоизацию компонентов и селекторов',
        ],
      ],
      [
        'Инструменты',
        [
          'Использует Docker для унификации окружения, локального запуска зависимостей (API, БД), тестирования и CI; знает базовые команды (build, run, exec, volumes, networks)',
          'Умеет настраивать npm scripts для автоматизации задач: сборка, линтинг, тесты, деплой',
          'Умеет решать конфликты слияния в Git; знаком с мерж-стратегиями (recursive, ours, theirs, squash, rebase)',
        ],
      ],
      [
        'Работа в команде',
        [
          'Обучает Junior-разработчиков – показывает лучшие практики, разбирает ошибки, объясняет архитектурные решения, поощряет вопросы и code reading',
          'Влияет на качество кода – внедряет code review, линтеры, форматтеры, CI; отслеживает метрики: количество багов после релиза, покрытие тестами, частота рефакторинга',
        ],
      ],
      [
        'Обучаемость',
        [
          'Изучал архитектуру фронтенда по книгам: "Clean Architecture", "Designing Frontend Applications", "Refactoring UI", курсы по системному дизайну и advanced patterns',
          'Внедряет новые технологии после оценки: сравнение с текущими инструментами, POC, анализ рисков, нагрузочного профиля и поддержки команды',
        ],
      ],
      [
        'Управление задачами',
        [
          'Если задача срочная, а релиз уже согласован – инициирует оценку риска, предлагает hotfix, договаривается о внесении изменений в релиз',
          'Умеет расставлять приоритеты: фичи по бизнес-ценности, баги по критичности, техдолг – по степени влияния на продуктивность команды',
        ],
      ],
      [
        'Архитектура',
        [
          'Может спроектировать систему для обработки 10K запросов в секунду – через масштабирование (горизонтальное/вертикальное), кэширование, очереди, CDN, SSR/SSG',
          'Знает, когда разбивать монолит на микросервисы – при росте сложности и команд; учитывает риски: распределенная согласованность, девопс-сложности, межсервисная коммуникация',
        ],
      ],
      [
        'Лидерство',
        [
          'Мотивирует команду при жестких сроках – через четкое планирование, делегирование, акцент на важности задачи, признание достижений',
          'Разрешает конфликты в команде – проводит 1:1, выявляет корень разногласий, находит компромиссы, формализует договоренности',
        ],
      ],
      [
        'Стратегия',
        [
          'Выбирает между "костылем" и архитектурным решением исходя из приоритета задачи, контекста (MVP или масштаб), обсуждает с командой компромиссный путь: временное решение с фиксацией в бэклог',
        ],
      ],
      [
        'Техдолг',
        [
          'Оценивает техдолг по критичности – как влияет на продуктивность, баги, скорость разработки; определяет, что можно отложить, а что требует срочного устранения',
        ],
      ],
    ]),
    recommendations: new Map([
      [
        'Хард-скиллы',
        [
          'Глубокое знание JavaScript/TypeScript (паттерны, оптимизация, сложные структуры данных)',
          'Продвинутое владение фреймворком (React/Angular) — кастомные хуки, контекст, производительность',
          'Архитектура SPA/SSR (разделение кода, lazy loading, стратегии кэширования)',
          'Работа с API (REST/GraphQL, WebSockets, авторизация, обработка ошибок)',
          'State-менеджмент (Redux Toolkit, Pinia, NgRx) + серверный стейт (React Query, Apollo)',
          'Инструменты сборки (Webpack/Vite) — кастомизация конфигов',
          'Тестирование (Unit: Jest/Vitest; E2E: Cypress/Playwright)',
          'Базовое понимание бэкенда (Node.js, API-контракты, HTTP-протокол)',
        ],
      ],
      [
        'Софт-скиллы',
        [
          'Техническое лидерство (формирование стандартов)',
          'Управление командой (5-10 разработчиков)',
          'Кросс-функциональное влияние (продукт, дизайн, бэкенд)',
          'Навыки презентации для топ-менеджмента',
          'Разрешение сложных конфликтов (бизнес vs технологии)',
          'Эмпатичное лидерство (развитие инженерной культуры)',
        ],
      ],
      [
        'Уровень участия в проекте',
        [
          'Технический владелец направления',
          'Архитектурные решения для всей продуктовой линейки',
          'Управление релизными циклами и техническим долгом',
          'Интеграция новых технологий (PWA, WebAssembly и др.)',
          'Участие в продуктовой стратегии (технико-экономическое обоснование)',
          'Менторство разработчиков',
        ],
      ],
      [
        'Ключевые навыки для развития',
        [
          'Управление через влияние (без формальных полномочий)',
          'Бизнес-метрики (LTV, CAC, конверсии)',
          'Финансовая грамотность (бюджетирование проектов)',
          'Корпоративная архитектура (Enterprise Architecture)',
        ],
      ],
      [
        'Рекомендуемые действия',
        [
          'Разработать стратегию frontend-развития компании',
          'Внедрить инженерные стандарты (code review, документация)',
          'Участвовать в pre-sale сложных проектов',
          'Участие в центре компетенций frontend в компании',
          'Публичные выступления (конференции, блоги)',
        ],
      ],
      [
        'Качественный скачок',
        [
          'От технического лидера к архитектору бизнес-решений: Влияние на технологическую стратегию компании, Формирование инженерной культуры, Управление через экспертность, а не должность',
        ],
      ],
    ]),
  },
  {
    name: 'Middle M2',
    description:
      'Самостоятельный и зрелый специалист, способный полностью владеть своим направлением разработки. Основная характеристика — способность не только решать сложные технические задачи, но и осознанно выбирать оптимальные решения с учетом долгосрочной перспективы проекта.',
    education: {
      formal: 'Высшее образование + продвинутые курсы/сертификаты',
      self: 'Изучает шаблоны проектирования, распределенные системы',
    },
    experience: {
      total: '4–6 года',
      project: 'Успешное выполнение задач в команде',
      difficulty: 'Критически важные задачи',
      teamSize: 'Распределенные команды',
    },
    characteristics: [
      'Полная ответственность за технические решения',
      'Способность предвидеть последствия архитектурных решений',
      'Активное влияние на техническую стратегию проекта',
      'Умение балансировать между перфекционизмом и бизнес-требованиями',
    ],
    hardSkills: new Map([
      ['Принципы разработки ПО', ['Экспертное применение принципов']],
      ['Паттерны проектирования', ['Разработка собственных паттернов']],
      ['Язык программирования', ['Экспертное знание JavaScript/TypeScrip']],
      ['Фреймворки', ['Глубокое понимание асинхронного подхода']],
      [
        'Инструменты разработки',
        ['Глубокое понимание DevTools, различные расширения для браузера'],
      ],
    ]),
    softSkills: new Map([
      ['Методологии разработки', ['Понимание Kanban, Lean']],
      [
        'Понимание всех этапов цикла разработки',
        ['Экспертное понимание этапов'],
      ],
      ['Проактивность', ['Помогает другим членам команды']],
      ['Самоорганизация', ['Умеет планировать задачи и влиять на изменения']],
      ['Обучаемость', ['Гибко реагирует на изменения']],
      [
        'Менторство',
        [
          'Ревью кода',
          'Разбор и анализ нетривиальных решений',
          'Консультации по проекту',
        ],
      ],
    ]),
    projectSkills: new Map([
      [
        'Управление задачами',
        ['Лидирует в управлении задачами для части команды.'],
      ],
      [
        'Управление зависимостями',
        ['Решает сложные зависимости между системами.'],
      ],
      ['Работа с требованиями', ['Участвует в обсуждении бизнес-требований.']],
    ]),
    howToRate: [
      'Hard Skills – проверка экспертного владения стеком технологий, качества архитектурных предложений.',
      'Soft Skills – наблюдение за участием в развитии команды, вклад в снижение технического долга, количество и значимость внедрённых улучшений.',
      'Project Skills – анализ снижения времени разработки, количество внедрённых улучшений, повышение стабильности продукта.',
    ],
    imageUrl: '/assets/middle2.jpg',
    questions: new Map([
      [
        'JavaScript / TypeScript / Angular / React',
        [
          'Понимает, как устроены кастомные хуки в React — это функции, использующие другие хуки и инкапсулирующие переиспользуемую логику. Пример сложного хука: useInfiniteScroll, useDebouncedSearch с использованием useEffect, useRef, useCallback',
          'Понимает работу Dependency Injection в Angular: внедрение зависимостей через конструктор, уровни провайдеров (root, platform, component); знает, что это позволяет делать код модульным и тестируемым',
          'Знает подходы к оптимизации SPA: ленивые модули и компоненты, code splitting, кеширование с помощью Service Worker, preloading и prefetching стратегий',
          'Умеет писать тесты для асинхронного кода: mock API (jest.mock), использование async/await, ожидание эффектов (waitFor, waitUntil), использование Cypress для end-to-end тестов с проверкой UI-реакции на асинхронные события',
        ],
      ],
      [
        'Инструменты',
        [
          'Настраивал CI/CD пайплайны с GitHub Actions / GitLab CI для сборки, линтинга, запуска тестов, деплоя; умеет использовать кэш, переменные окружения, секреты',
          'Использует DevTools плагины: React/Angular DevTools, Redux DevTools, Lighthouse, Performance panel',
          'Умеет профилировать производительность и память: вкладки Performance и Memory в Chrome DevTools, heap snapshot, flamechart, timeline анализа рендера',
        ],
      ],
      [
        'Работа в команде',
        [
          'Умеет аргументированно убеждать команду перейти на новый инструмент — через сравнительную таблицу, бенчмарки, PoC и демонстрацию преимуществ',
          'Если коллега нарушает кодстайл — корректно напоминает о правилах, предлагает линтеры и автоматизацию, обсуждает проблему на ретро или в командном чате',
        ],
      ],
      [
        'Обучаемость',
        [
          'Использует ресурсы: официальные доки, FrontendMasters, Egghead, Advanced React Patterns, Angular In Depth',
          'Закрепляет знания на pet-проектах, делится знаниями с командой, делает доклады, проводит мини-воркшопы',
        ],
      ],
      [
        'Принятие решений',
        [
          'Оценивает готовую библиотеку по популярности, поддержке, размеру и безопасности; пишет свою реализацию, если требуется легкий/уникальный функционал без зависимости',
          'Если code-review затягивается — договаривается об SLA на ревью, настраивает напоминания, предлагает async-review или mob-review с автором кода',
        ],
      ],
      [
        'Архитектура',
        [
          'Выбирает REST — при простой структуре данных и широкой совместимости, GraphQL — при необходимости гибких выборок, gRPC — для микросервисов и высокой производительности',
          'Проектирует систему для real-time данных — WebSocket при двусторонней связи, Server-Sent Events — при однонаправленном стриме (например, логи, котировки), с fallbacks и отработкой reconnect логики',
        ],
      ],
      [
        'Коммуникация',
        [
          'Умеет объяснять технические ограничения нетехническим коллегам — через аналогии, визуализации, фокус на влиянии на сроки и пользовательский опыт',
          'Активно участвует в планировании: задает уточняющие вопросы, обосновывает оценки временем на баги, риски, тестирование',
        ],
      ],
      [
        'Проактивность',
        [
          'Предлагал улучшения процессов: внедрение автоматической документации, переход на Vite, настройка eslint/husky/prettier для единообразия стиля',
        ],
      ],
      [
        'Работа с требованиями',
        [
          'Если нет деталей — инициирует обсуждение с заказчиком, фиксирует договоренности в комментариях к задаче',
          'Проверяет выполнение ТЗ — по acceptance criteria, демонстрации фич, проверке UX, юнит-тестов и ручному тестированию',
        ],
      ],
    ]),
    recommendations: new Map([
      [
        'Хард-скиллы',
        [
          'Глубокое знание JavaScript/TypeScript (паттерны, оптимизация, сложные структуры данных)',
          'Продвинутое владение фреймворком (React/Angular) — кастомные хуки, контекст, продвинутая оптимизация',
          'Архитектура SPA/SSR/SSG — стратегии кэширования, lazy loading',
          'Работа с API (REST/GraphQL/WebSockets) — авторизация, обработка ошибок, кэширование',
          'State-менеджмент (Redux Toolkit, NgRx) + серверный стейт (React Query, Apollo)',
          'Инструменты сборки (Webpack/Vite) — кастомизация конфигов, оптимизация бандлов',
          'Тестирование (Unit: Jest/Vitest; E2E: Cypress/Playwright) — покрытие сложных сценариев',
          'Базовое понимание бэкенда (Node.js, API-контракты, HTTP-протокол)',
          'Работа с дизайн-системами (Storybook, Figma)',
        ],
      ],
      [
        'Софт-скиллы',
        [
          'Эффективная коммуникация с командами (бэкенд, дизайн, продукт)',
          'Проведение демо и презентаций решений для стейкхолдеров',
          'Менторство для Junior-разработчиков',
          'Приоритизация задач (оценка сроков, выделение MVP)',
          'Работа с неопределенностью (анализ требований, предложение альтернатив)',
          'Управление ожиданиями (обоснование сроков, технический долг)',
          'Критическое мышление (анализ решений, поиск оптимальных путей)',
        ],
      ],
      [
        'Уровень участия в проекте',
        [
          'Самостоятельно ведет функциональные модули (от проектирования до релиза)',
          'Участвует в принятии архитектурных решений (выбор технологий, подходов)',
          'Решает проблемы производительности (анализ бандлов, оптимизация рендера)',
          'Координирует работу с бэкендом по API-контрактам',
          'Проводит код-ревью (активно вносит правки, объясняет best practices)',
          'Помогает формировать технические требования',
          'Участвует в планировании спринтов (оценка сложности задач)',
        ],
      ],
      [
        'Ключевые навыки для развития',
        [
          'Системное мышление (понимание продукта в целом)',
          'Бизнес-метрики (LTV, конверсии)',
          'Основы управления проектами',
        ],
      ],
      [
        'Рекомендуемые действия',
        [
          'Вести сложные технические инициативы',
          'Разработать стандарты разработки',
          'Участвовать в планировании продукта',
        ],
      ],
      [
        'Качественный скачок',
        [
          'От разработчика к техническому лидеру',
        ],
      ],
    ]),
  },
  {
    name: 'Middle M3',
    description:
      'Эксперт уровня Middle, демонстрирующий готовность к переходу на Senior позицию. Ключевое отличие — способность не только решать сложные технические задачи, но и формировать техническую стратегию для всего фронтенд-направления.',
    education: {
      formal: 'Высшее образование + экспертные знания',
      self: 'Глубокое понимание DevOps, CI/CD, микрофронтов',
    },
    experience: {
      total: '6–8 года',
      project: 'Лидирование в части задач',
      difficulty: 'Архитектурные задачи',
      teamSize: 'Лидирование нескольких задач',
    },
    characteristics: [
      'Техническое лидерство в масштабах компании',
      'Ответственность за кросс-командные инициативы',
      'Умение проектировать системы с 3-5 летней перспективой',
      'Баланс между инновациями и техническим консерватизмом',
    ],
    hardSkills: new Map([
      ['Принципы разработки ПО', ['Формирование стандартов принципов']],
      ['Паттерны проектирования', ['Формирование стандартов паттернов']],
      ['Язык программирования', ['Экспертное знание JavaScript/TypeScript']],
      ['Фреймворки', ['Экспертное знание архитектуры микрофронтов']],
      ['Инструменты разработки', ['Экспертное знание DevOps-инструментов']],
    ]),
    softSkills: new Map([
      ['Методологии разработки', ['Лидирование гибридных методологий']],
      [
        'Понимание всех этапов цикла разработки',
        ['Формирование стандартов этапов'],
      ],
      ['Проактивность', ['Координирует работу команды']],
      [
        'Самоорганизация',
        ['Умеет планировать задачи и формировать результаты'],
      ],
      ['Обучаемость', ['Влияет на изменения']],
      [
        'Менторство',
        [
          'Ревью кода',
          'Консультации по сложным техническим вопросам',
          'Помощь в решении зависших задач',
        ],
      ],
    ]),
    projectSkills: new Map([
      [
        'Управление задачами',
        ['Лидирует в управлении задачами для всей команды.'],
      ],
      ['Управление зависимостями', ['Решает межкомандные зависимости.']],
      [
        'Работа с требованиями',
        ['Формулирует сложные технические требования.'],
      ],
    ]),
    imageUrl: '/assets/middle3.jpg',
    questions: new Map([
      [
        'JavaScript / TypeScript / Angular / React',
        [
          'Активно участвует в Open Source: вносит PR, ведет собственные проекты, поддерживает библиотеки, взаимодействует с сообществом',
          'Пишет собственные библиотеки и компоненты с упором на переиспользуемость, модульность, документированность и тестируемость',
        ],
      ],
      [
        'Архитектура',
        [
          'Проектирует enterprise-решения с учетом масштабируемости, безопасности, распределённой логики, разделения ответственности и поддержки CI/CD',
          'Оптимизирует high-load приложения: балансировка нагрузки, оптимизация рендеринга, использование Web Workers, SSR и кеширование',
        ],
      ],
      [
        'Инновации',
        [
          'Внедряет AI/ML технологии во фронтенд: интеграция Copilot-подобных ассистентов, использование моделей для автоматизации задач и улучшения UX',
        ],
      ],
      [
        'Работа в команде',
        [
          'Влияет на техническую стратегию компании через участие в архитектурных сессиях, подготовку технических докладов и инициатив по улучшению процессов',
          'Выстраивает взаимодействие между командами с помощью кросс-функциональных встреч, документации API и установления общих стандартов коммуникации',
        ],
      ],
      [
        'Принятие решений',
        [
          'Принимает решение о переписывании проекта с нуля, если затраты на поддержку старого кода превышают выгоды, и новая архитектура значительно улучшит масштабируемость и качество',
          'Оценивает долгосрочные последствия технических решений, анализируя влияние на поддержку, скорость разработки, обучаемость команды и бизнес-цели',
        ],
      ],
    ]),
    recommendations: new Map([
      [
        'Хард-скиллы',
        [
          'Эксперт в нескольких стеках (React/Angular)',
          'Архитектура enterprise-решений (микросервисы, design systems)',
          'Интеграция сложных систем (SSO, платежи, аналитика)',
          'Fullstack-разработка (Node.js, базы данных)',
          'DevOps-практики (CI/CD, Docker)',
        ],
      ],
      [
        'Софт-скиллы',
        [
          'Стратегическое лидерство',
          'Управление командами (5-10 человек)',
          'Публичные выступления',
          'Эмпатичное лидерство',
        ],
      ],
      [
        'Уровень участия в проекте',
        [
          'Технический владелец направления',
          'Управление релизными циклами',
          'Интеграция новых технологий',
          'Участие в продуктовой стратегии',
        ],
      ],
      [
        'Ключевые навыки для развития',
        [
          'Управление через влияние',
          'Финансовая грамотность',
          'Корпоративная архитектура',
        ],
      ],
      [
        'Рекомендуемые действия',
        [
          'Разработать стратегию развития',
          'Внедрить инженерные стандарты',
          'Создать центр компетенций',
        ],
      ],
      [
        'Качественный скачок',
        [
          'От технического лидера к архитектору бизнес-решений',
        ],
      ],
    ]),
  },
  {
    name: 'Senior S1',
    description:
      'Переходная ступень от Middle+ к полноценному Senior. Разработчик на этом уровне уже обладает экспертизой Senior, но ещё нарабатывает опыт стратегического влияния на бизнес. Основная характеристика — способность соединять глубокую техническую экспертизу с бизнес-ориентированностью.',
    education: {
      formal: 'Высшее образование + множество курсов/сертификатов',
      self: 'Экспертное знание всех используемых технологий',
    },
    experience: {
      total: '8+ лет',
      project: 'Лидирование подпроектов',
      difficulty: 'Стратегические задачи',
      teamSize: 'Лидирование направления',
    },
    characteristics: [
      'Переход от решения технических проблем к их предупреждению',
      'Ответственность за технологические решения на уровне продукта',
      'Формирование технического видения направления',
      'Ведение нескольких проектов одновременно',
    ],
    hardSkills: new Map([
      ['Принципы разработки ПО', ['Пропаганда принципов в компании']],
      ['Паттерны проектирования', ['Пропаганда паттернов в компании']],
      ['Язык программирования', ['Полное владение языком']],
      ['Фреймворки', ['Полное владение всеми фреймворками']],
      ['Инструменты разработки', ['Полное владение всеми инструментами']],
    ]),
    softSkills: new Map([
      ['Методологии разработки', ['Формирование методологий']],
      [
        'Понимание всех этапов цикла разработки',
        ['Пропаганда этапов в компании'],
      ],
      ['Проактивность', ['Лидирует несколько команд']],
      ['Самоорганизация', ['Умеет планировать задачи и формировать стратегию']],
      ['Обучаемость', ['Адаптация новых технологий под бизнес-задачи']],
      [
        'Менторство',
        [
          'Ревью кода',
          'Консультации по бизнес процессам',
          'Консультации по техническим процессам проекта',
          'Помощь в решении сложных задач',
        ],
      ],
    ]),
    projectSkills: new Map([
      [
        'Управление задачами',
        ['Лидирует в управлении задачами для нескольких команд'],
      ],
      ['Управление зависимостями', ['Решает сложные межпроектные зависимости']],
      ['Работа с требованиями', ['Участвует в формировании бизнес-стратегий']],
    ]),
    howToRate: [
      'Hard Skills – проверка вклада в технологический стек компании, глубина понимания системных компромиссов.',
      'Soft Skills – наблюдение за участием в развитии продукта и общение с клиентом, влияние на компанию.',
      'Project Skills – анализ продуктивности, построение процессов, технического лидерства.',
    ],
    imageUrl: '/assets/senior1.jpg',
    questions: new Map([
      [
        'JavaScript / TypeScript / Angular / React',
        [
          'Знаком с кастомными компиляторами на базе Babel plugins: умеет писать плагины для трансформации кода, добавления синтаксического сахара или оптимизаций на этапе сборки',
          'Оптимизирует Webpack-сборку: настройка tree shaking, code splitting, минимизация, кеширование, ускорение загрузки и пересборки',
          'Работал с Web Workers для выполнения тяжелых задач в отдельном потоке и улучшения отзывчивости UI',
        ],
      ],
      [
        'DevOps',
        [
          'Настраивал Kubernetes для фронтенд-приложений: конфигурация deployment, service, ingress, autoscaling, управление секретами и конфигурациями',
          'Использует Canary-деплои и feature flags для безопасного релиза новых функций с возможностью быстрого отката и поэтапного запуска',
        ],
      ],
      [
        'Архитектура',
        [
          'Проектировал Design System / UI Kit: стандартизация компонентов, управление стилями, документация и поддержка единого пользовательского опыта',
          'Оптимизирует взаимодействие между микросервисами: выбор протоколов, кэширование, балансировка нагрузки, отказоустойчивость, минимизация латентности',
        ],
      ],
      [
        'Работа в команде',
        [
          'Выстраивает процессы в команде: регулярные стендапы, код-ревью, ретроспективы, договоренности по стандартам и задачам',
          'Эффективно коммуницирует с нетехническими стейкхолдерами: объясняет сложные технические темы простым языком, фокусируется на бизнес-ценности и рисках',
        ],
      ],
      [
        'Принятие решений',
        [
          'Оценивает технический долг на уровне компании: собирает метрики, выявляет узкие места, определяет приоритеты для устранения с учетом влияния на бизнес',
          'Принимает решение о переходе на новый фреймворк исходя из оценки стабильности, сообщества, рисков миграции, обучения команды и долгосрочной поддержки',
        ],
      ],
    ]),
    recommendations: new Map([
      [
        'Хард-скиллы',
        [
          'Экспертное владение современным стеком (TypeScript, React/Angular)',
          'Архитектура enterprise-приложений (микросервисы, модульные системы, design systems)',
          'Продвинутая оптимизация (бандлы, рендеринг, кэширование, Web Workers)',
          'Fullstack-экспертиза (Node.js, API design, базовые DevOps)',
          'Интеграция сложных систем (SSO, платежи, аналитика)',
          'Безопасность frontend (CSP, XSS, CSRF защита)',
          'Инструменты мониторинга (Sentry, LogRocket)',
          'Управление техническим долгом (стратегии миграции)',
        ],
      ],
      [
        'Софт-скиллы',
        [
          'Техническое лидерство (формирование стандартов)',
          'Управление командой (5-10 разработчиков)',
          'Кросс-функциональное влияние (продукт, дизайн, бэкенд)',
          'Навыки презентации для топ-менеджмента',
          'Разрешение сложных конфликтов (бизнес vs технологии)',
          'Эмпатичное лидерство (развитие инженерной культуры)',
        ],
      ],
      [
        'Уровень участия в проекте',
        [
          'Технический владелец frontend-направления',
          'Архитектурные решения для всей продуктовой линейки',
          'Управление релизными циклами и техническим долгом',
          'Интеграция новых технологий (PWA, WebAssembly и др.)',
          'Участие в продуктовой стратегии (технико-экономическое обоснование)',
          'Менторство разработчиков',
        ],
      ],
      [
        'Ключевые навыки для развития',
        [
          'Управление через влияние (без формальных полномочий)',
          'Бизнес-метрики (LTV, CAC, конверсии)',
          'Финансовая грамотность (бюджетирование проектов)',
          'Корпоративная архитектура (Enterprise Architecture)',
        ],
      ],
      [
        'Рекомендуемые действия',
        [
          'Разработать стратегию frontend-развития компании',
          'Внедрить инженерные стандарты (code review, документация)',
          'Участвовать в pre-sale сложных проектов',
          'Участие в центре компетенций frontend в компании',
          'Публичные выступления (конференции, блоги)',
        ],
      ],
      [
        'Качественный скачок',
        [
          'От технического лидера к архитектору бизнес-решений: Влияние на технологическую стратегию компании, Формирование инженерной культуры, Управление через экспертность, а не должность',
        ],
      ],
    ]),
  },
  {
    name: 'Senior S2',
    description:
      'Зрелый технический лидер, способный влиять не только на техническую, но и на бизнес-стратегию компании. Основная характеристика — способность соединять глубокую техническую экспертизу с пониманием бизнес-процессов и формировать технологическое видение компании.',
    education: {
      formal: 'Высшее образование + экспертные знания',
      self: 'Знание новых технологий и тенденций в индустрии',
    },
    experience: {
      total: '10+ лет',
      project: 'Лидирование проектов',
      difficulty: 'Глобальные задачи',
      teamSize: 'Лидирование команды',
    },
    characteristics: [
      'Полная ответственность за технологическое направление',
      'Способность предвидеть технологические тренды',
      'Формирование инженерной культуры в компании',
      'Участие в стратегических бизнес-решениях',
    ],
    hardSkills: new Map([
      ['Принципы разработки ПО', ['Создание новых подходов']],
      ['Паттерны проектирования', ['Создание новых паттернов']],
      ['Язык программирования', ['Экспертное знание языка и его экосистемы']],
      [
        'Фреймворки',
        ['Экспертное знание всех фреймворков и их взаимодействия'],
      ],
      [
        'Инструменты разработки',
        ['Экспертное знание всех инструментов и их внедрения'],
      ],
    ]),
    softSkills: new Map([
      ['Методологии разработки', ['Влияние на методологии компании']],
      ['Понимание всех этапов цикла разработки', ['Создание новых этапов']],
      ['Проактивность', ['Лидирует стратегические направления']],
      ['Самоорганизация', ['Умеет планировать глобальные задачи']],
      [
        'Обучаемость',
        ['Прогнозирование технологических трендов и их внедрение в компании'],
      ],
      [
        'Менторство',
        [
          'Ревью кода, выявление разработчиков с низкой компетенцией в своём грейде и наставническая работа по таким случаям с контролем исполнения и анализом результатов о проделанной работе',
        ],
      ],
    ]),
    projectSkills: new Map([
      [
        'Управление задачами',
        ['Формирует стратегию в управлении задачами для команды'],
      ],
      [
        'Управление зависимостями',
        ['Решает кросс-функциональные зависимости на уровне компании/продукта'],
      ],
      [
        'Работа с требованиями',
        ['Формирует сложные технические требования на основе бизнес стратегии'],
      ],
    ]),
    howToRate: [
      'Hard Skills – проверка вклада в технологический стек компании, глубина понимания системных компромиссов.',
      'Soft Skills – наблюдение за участием в развитии продукта и общение с клиентом, влияние на компанию.',
      'Project Skills – анализ продуктивности, построение процессов, технического лидерства.',
    ],
    imageUrl: '/assets/senior2.jpg',
    questions: new Map([
      [
        'JavaScript / TypeScript / Angular / React',
        [
          'Понимает, как создавать кастомные компиляторы и трансформеры на базе Babel plugins для расширения синтаксиса и автоматизации преобразований кода',
          'Оптимизирует Webpack сборку: настройка кэширования, code splitting, tree shaking, минимизация, анализ бандла с помощью webpack-bundle-analyzer',
          'Работает с Web Workers для вынесения тяжелых вычислений из основного потока, знает особенности коммуникации между потоками через postMessage и SharedArrayBuffer',
        ],
      ],
      [
        'DevOps',
        [
          'Настраивает Kubernetes для фронтенд-приложений: деплой, масштабирование, конфигурация ingress и сервисов',
          'Организует canary-деплой и feature flags для постепенного и безопасного релиза новых фич с возможностью быстрого отката',
        ],
      ],
      [
        'Архитектура',
        [
          'Проектирует Design System и UI Kit: создание повторно используемых компонентов, систематизация стилей, документация и Storybook для поддержки консистентности интерфейса',
          'Оптимизирует взаимодействие между микросервисами: использование легковесных протоколов (gRPC, REST), очередей сообщений, обеспечение надежности и отказоустойчивости',
        ],
      ],
      [
        'Работа в команде',
        [
          'Выстраивает процессы в команде через определение ролей, регулярные синхронизации, четкие стандарты кодирования и практики agile (скрам, канбан)',
          'Эффективно взаимодействует с нетехническими стейкхолдерами, переводя технические детали в бизнес-ценность, используя визуализации и понятные метрики',
        ],
      ],
      [
        'Принятие решений',
        [
          'Оценивает технический долг на уровне всей компании через метрики: частота багов, время на релиз, сложность поддержки, и предлагает стратегию его погашения',
          'Принимает решение о переходе на новый фреймворк, учитывая затраты на миграцию, обучение команды, преимущества производительности и поддержки сообщества',
        ],
      ],
    ]),
    recommendations: new Map([
      [
        'Хард-скиллы',
        [
          'Экспертное владение полным стеком технологий (React/Angular, TypeScript, Node.js)',
          'Архитектура масштабируемых приложений (микрофронтенды, SSR/SSG, PWA)',
          'Продвинутая оптимизация производительности (бандл-анализ, lazy loading, кэширование)',
          'Fullstack-экспертиза (REST/GraphQL, WebSockets, базовые DevOps)',
          'Безопасность frontend (XSS, CSRF, CSP)',
          'Управление техническим долгом (стратегии рефакторинга)',
        ],
      ],
      [
        'Софт-скиллы',
        [
          'Техническое лидерство (формирование стандартов кода)',
          'Менторство (ведение нескольких разработчиков)',
          'Кросс-функциональная коммуникация (продукт, дизайн, бэкенд)',
          'Навыки презентации для руководства',
          'Управление конфликтами (баланс бизнеса и технологий)',
        ],
      ],
      [
        'Уровень участия в проекте',
        [
          'Технический лидер направления',
          'Проектирование архитектуры новых продуктов',
          'Оптимизация процессов разработки',
          'Участие в продуктовых решениях',
          'Разрешение сложных технических проблем',
        ],
      ],
      [
        'Ключевые навыки для развития',
        [
          'Системное мышление (понимание продукта в целом)',
          'Бизнес-метрики (LTV, конверсии)',
          'Основы управления проектами',
        ],
      ],
      [
        'Рекомендуемые действия',
        [
          'Вести сложные технические инициативы',
          'Разработать стандарты разработки',
          'Участвовать в планировании продукта',
        ],
      ],
      [
        'Качественный скачок',
        [
          'От разработчика к техническому лидеру',
        ],
      ],
    ]),
  },
  {
    name: 'Senior S3',
    description:
      'Вершина технической карьеры разработчика, где техническая экспертиза трансформируется в стратегическое влияние на бизнес и индустрию. Это уровень архитектурных решений, формирующих будущее не только компании, но и всей отрасли.',
    education: {
      formal: 'Высшее образование + экспертные знания',
      self: 'Знания',
    },
    experience: {
      total: '12+ лет',
      project: 'Лидирование проектов',
      difficulty: 'Задачи компании',
      teamSize: 'Лидирование технологий в компании',
    },
    characteristics: [
      'Формирование технологического видения компании на 5-10 лет',
      'Создание новых технологических продуктов',
      'Признанная экспертиза',
      'Ответственность за технологическую стратегию как конкурентное преимущество',
    ],
    hardSkills: new Map([
      ['Принципы разработки ПО', ['Создание новых подходов']],
      ['Алгоритмы', ['Влияние на выбор алгоритмов']],
      ['Паттерны проектирования', ['Создание новых паттернов']],
      ['Язык программирования', ['Экспертное знание языка и его экосистемы']],
      [
        'Фреймворки',
        ['Экспертное знание всех фреймворков и их взаимодействия'],
      ],
      [
        'Инструменты разработки',
        ['Экспертное знание всех инструментов и их внедрения'],
      ],
    ]),
    softSkills: new Map([
      ['Методологии разработки', ['Влияние на методологии компании']],
      ['Понимание всех этапов цикла разработки', ['Создание новых этапов']],
      ['Проактивность', ['Лидирует стратегические направления']],
      ['Самоорганизация', ['Умеет планировать глобальные задачи']],
      [
        'Обучаемость',
        ['Прогнозирование технологических трендов и их внедрение в компании'],
      ],
      [
        'Менторство',
        [
          'Ревью кода, выявление разработчиков с низкой компетенцией в своём грейде и наставническая работа по таким случаям с контролем исполнения и анализом результатов о проделанной работе',
        ],
      ],
    ]),
    projectSkills: new Map([
      [
        'Управление задачами',
        ['Формирует стратегию в управлении задачами для команды'],
      ],
      [
        'Управление зависимостями',
        ['Решает кросс-функциональные зависимости на уровне компании/продукта'],
      ],
      [
        'Работа с требованиями',
        ['Формирует сложные технические требования на основе бизнес стратегии'],
      ],
    ]),
    imageUrl: '/assets/senior3.jpg',
    questions: new Map([
      [
        'JavaScript / TypeScript / Angular / React',
        [
          'Активно участвует в Open Source: вносит PR, ведет собственные проекты, поддерживает библиотеки, взаимодействует с сообществом',
          'Пишет собственные библиотеки и компоненты с упором на переиспользуемость, модульность, документированность и тестируемость',
        ],
      ],
      [
        'Архитектура',
        [
          'Проектирует enterprise-решения с учетом масштабируемости, безопасности, распределённой логики, разделения ответственности и поддержки CI/CD',
          'Оптимизирует high-load приложения: балансировка нагрузки, оптимизация рендеринга, использование Web Workers, SSR и кеширование',
        ],
      ],
      [
        'Инновации',
        [
          'Внедряет AI/ML технологии во фронтенд: интеграция Copilot-подобных ассистентов, использование моделей для автоматизации задач и улучшения UX',
        ],
      ],
      [
        'Работа в команде',
        [
          'Влияет на техническую стратегию компании через участие в архитектурных сессиях, подготовку технических докладов и инициатив по улучшению процессов',
          'Выстраивает взаимодействие между командами с помощью кросс-функциональных встреч, документации API и установления общих стандартов коммуникации',
        ],
      ],
      [
        'Принятие решений',
        [
          'Принимает решение о переписывании проекта с нуля, если затраты на поддержку старого кода превышают выгоды, и новая архитектура значительно улучшит масштабируемость и качество',
          'Оценивает долгосрочные последствия технических решений, анализируя влияние на поддержку, скорость разработки, обучаемость команды и бизнес-цели',
        ],
      ],
    ]),
    recommendations: new Map([
      [
        'Хард-скиллы',
        [
          'Эксперт в нескольких стеках (React/Angular)',
          'Архитектура enterprise-решений (микросервисы, design systems)',
          'Интеграция сложных систем (SSO, платежи, аналитика)',
          'Fullstack-разработка (Node.js, базы данных)',
          'DevOps-практики (CI/CD, Docker)',
        ],
      ],
      [
        'Софт-скиллы',
        [
          'Стратегическое лидерство',
          'Управление командами (5-10 человек)',
          'Публичные выступления',
          'Эмпатичное лидерство',
        ],
      ],
      [
        'Уровень участия в проекте',
        [
          'Технический владелец направления',
          'Управление релизными циклами',
          'Интеграция новых технологий',
          'Участие в продуктовой стратегии',
        ],
      ],
      [
        'Ключевые навыки для развития',
        [
          'Управление через влияние',
          'Финансовая грамотность',
          'Корпоративная архитектура',
        ],
      ],
      [
        'Рекомендуемые действия',
        [
          'Разработать стратегию развития',
          'Внедрить инженерные стандарты',
          'Создать центр компетенций',
        ],
      ],
      [
        'Качественный скачок',
        [
          'От технического лидера к архитектору бизнес-решений',
        ],
      ],
    ]),
  },
];
